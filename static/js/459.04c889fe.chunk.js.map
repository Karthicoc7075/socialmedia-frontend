{"version":3,"file":"static/js/459.04c889fe.chunk.js","mappings":"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","sources":["../node_modules/jwt-decode/build/esm/index.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["InvalidTokenError","Error","base64UrlDecode","str","output","replace","length","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","jwtDecode","token","options","pos","header","part","split","decoded","e","message","JSON","parse","prototype","name","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","encodeURIComponent","Polling","_polling","_poll","total","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","count","join","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","src","b","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","_sendPacket","_resetPingTimeout","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","DEFAULT_TRANSPORTS","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","reject","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}