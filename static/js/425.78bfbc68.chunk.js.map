{"version":3,"file":"static/js/425.78bfbc68.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/Model/Model.js","api/authApi.js","features/auth/actions/authActions.js","pages/Auth/Auth.js"],"sourcesContent":["import React,{forwardRef} from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = forwardRef(({color,size},ref)=> {\r\n  return (\r\n    <div className={`loader ${color} ${size} `} ref={ref}  ></div>\r\n  )\r\n})\r\n\r\nexport default Loader","import React from 'react'\r\nimport './Model.css'\r\n\r\nfunction Model({children}) {\r\n   \r\n  return (\r\n    <div className='model-wrapper'  >\r\n       <div className='model'>\r\n       {children}\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Model","import axiosInstance from \"./axiosConfig\"\nimport { addToast } from '../features/toast/actions/toastAction'\n\nexport const registerUserApi = async (data,dispatch) => {\n    try {\n        const response = await axiosInstance.post('/auth/signup', data);\n        return response.data;\n    } catch (error) {\n        dispatch(addToast(error.response?.data.message || error.message , 'error'));\n    }\n}\n\n\nexport const loginUserApi = async (loginData,dispatch) => {\n    try {\n        const response = await axiosInstance.post('/auth/signin', loginData );\n        return response.data;\n    } catch (error) {\n        dispatch(addToast(error.response?.data.message || error.message , 'error'));\n    }\n}\n\n\n\nexport const passwordChangeApi = async (data,dispatch) => {\n    try {\n        const response = await axiosInstance.put('/dashboard/auth/change-password', data);\n        return response.data;\n    } catch (error) {\n        dispatch(addToast(error.response.data.message || error.message , 'error'));\n    }\n}","import * as actionTypes from '../constants/actionTypes';\nimport {registerUserApi,loginUserApi,passwordChangeApi} from '../../../api/authApi'\nimport {addToast} from '../../toast/actions/toastAction'\n\n\nexport const register = (data) => async (dispatch) => {\n    dispatch({ type: actionTypes.REGISTER_REQUEST });\n\n    try {\n        const response = await registerUserApi(data, dispatch);\n        const payload = response;\n        dispatch({ type: actionTypes.REGISTER_SUCCESS, payload });\n        dispatch(addToast(response.message, 'success'));\n    } catch (error) {\n        dispatch({ type: actionTypes.REGISTER_FAILURE , error });\n        dispatch(addToast(error.response?.data.message || error.message , 'error'));\n    }\n}\n\nexport const login = (loginData) =>async(dispatch) =>{\n    dispatch({type:actionTypes.LOGIN_REQUEST})\n\n    try{\n        const response = await loginUserApi(loginData,dispatch)\n        \n        \n        const payload = response\n        dispatch({type:actionTypes.LOGIN_SUCCESS, payload})\n    }\n    catch(error){\n        console.log(error);\n        dispatch({type:actionTypes.LOGIN_FAILURE, error})\n    }\n}\n\n\n\nexport const passwordChange = (data) => async (dispatch) => {\n    dispatch({ type: actionTypes.PASSWORD_CHANGE_REQUEST });\n\n    try {\n        const response = await passwordChangeApi(data, dispatch);\n        const payload = response.data;\n        dispatch({ type: actionTypes.PASSWORD_CHANGE_SUCCESS,  });\n        dispatch(addToast(response.message, 'success'));\n    } catch (error) {\n        dispatch({ type: actionTypes.PASSWORD_CHANGE_FAILURE, error });\n    }\n}\n\nexport const setRole = (role) =>(dispatch)=>{\n    dispatch({type:actionTypes.SET_ROLE, role})\n\n} \n\n\nexport const logout = () => async (dispatch) => {\n    dispatch({ type: actionTypes.LOGOUT_REQUEST });\n\n    try {\n        dispatch({ type: actionTypes.LOGOUT_SUCCESS });\n    } catch (error) {\n        dispatch({ type: actionTypes.LOGOUT_FAILURE, error });\n    }\n}","import React, { useState,useEffect } from \"react\";\r\nimport \"./Auth.css\";\r\nimport WelcomImg from \"../../assets/images/Auth.png\";\r\nimport { button } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login,register } from \"../../features/auth/actions/authActions\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Model from \"../../components/Model/Model\";\r\nimport Toaster from \"../../components/Toaster/Toaster\";\r\n\r\n\r\nfunction Auth() {\r\n  // const [firstName, setFirstName] = useState(\"Karthi\");\r\n  // const [lastName, setLastName] = useState(\"P\");\r\n  // const [username, setUsername] = useState(\"Karthi\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const [inputErrors, setInputErrors] = useState({})\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const dispatch = useDispatch();                           \r\n  const {loading,error,errorMsg} = useSelector(state => state.auth)\r\n  const handleInput = (e) => {\r\n    const newObj = { ...formData, [e.target.name]: e.target.value }\r\n    setFormData(newObj)\r\n  }\r\n// if(loading){\r\n//   localStorage.clear()\r\n// }\r\n\r\n  const vaildation = (formData) => {\r\n    const error = {}\r\n\r\n    if (!isLogin) {\r\n      if (formData.firstName == '') {\r\n        error.firstName = \"Firstname is required!!\"\r\n      }\r\n\r\n      if (formData.lastName == '') {\r\n        error.lastName = \"Lastname is required!!\"\r\n      }\r\n\r\n      if (formData.username == '') {\r\n        error.username = \"Username is required!!\"\r\n      }\r\n\r\n    }\r\n    if (formData.email == '') {\r\n      error.email = \"Email is required!!\"\r\n    }\r\n\r\n    if (formData.password == '') {\r\n      error.password = \"Password is required!!\"\r\n    }\r\n    return error;\r\n  }\r\n\r\n  \r\n  const submitHandle = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submit\");\r\n\r\n    let errorVaildation = vaildation(formData)\r\n\r\n    setInputErrors(errorVaildation);\r\n\r\n    if (Object.keys(errorVaildation).length == 0) {\r\n      if (isLogin) {\r\n        const { email, password } = formData\r\n\r\n        let isEmail = email.search(\"@\");\r\n\r\n        if (isEmail && isEmail != -1) {  //username or email check\r\n          dispatch(login({ email, password }));\r\n          console.log('signIn in email');\r\n          console.log({ email,password });\r\n          \r\n        } else {\r\n          dispatch(login({  username:email, password }));\r\n          console.log('signIn in username');\r\n\r\n        }\r\n      } else {\r\n        dispatch(register(formData));\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const signInForm = () => {\r\n    setIsLogin(!isLogin)\r\n    setInputErrors({})\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"Auth\">\r\n      {/* {inputErrors.email && <Toaster msg=\"User not found\" />} */}\r\n       \r\n      {loading && <Model><Loader color='wh' size='md'/></Model>}\r\n      <div className=\"Auth-container\">\r\n        <div className=\"left\">\r\n          <img className=\"image\" src={WelcomImg} alt=\"welcome-image\" />\r\n        </div> \r\n        <div className=\"right\" >\r\n          <form className=\"form\" onSubmit={submitHandle} >\r\n            <div className=\"form-content\">\r\n              <h2 className=\"title\">Hello Again!</h2>\r\n              <p className=\"desc\">welcome back you've been missed!</p>\r\n            </div>\r\n            {!isLogin ? (\r\n              <div>\r\n                <div className=\"form-name-group\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      className={inputErrors.firstName ? \"inputField  input-error\":\"inputField\"}\r\n                      type=\"text\"\r\n                      placeholder=\"First name\"\r\n                      // value={firstName}\r\n                      // onChange={(e) => setFirstName(e.target.value)}\r\n                      onChange={(e) => handleInput(e)}\r\n                      name=\"firstName\"\r\n                    />\r\n                    {inputErrors.firstName && <p className=\"error\">{inputErrors.firstName}</p>}\r\n                 \r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      className={inputErrors.lastName ? \"inputField  input-error\":\"inputField\"}\r\n                      type=\"text\"\r\n                      placeholder=\"Last name \"\r\n                      // value={lastName}\r\n                      // onChange={(e) => setLastName(e.target.value)}\r\n                      onChange={(e) => handleInput(e)}\r\n                      name=\"lastName\"\r\n                    />\r\n                    {inputErrors.lastName && <p className=\"error\">{inputErrors.lastName}</p>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    className={inputErrors.username ? \"inputField  input-error\":\"inputField\"}\r\n                    type=\"text\"\r\n                    placeholder=\"username \"\r\n                    // onChange={(e) => setEmail(e.target.value)}\r\n                    onChange={(e) => handleInput(e)}\r\n                    name=\"username\"\r\n\r\n                  />\r\n                  {inputErrors.username && <p className=\"error\">{inputErrors.username}</p>}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                className={inputErrors.email ? \"inputField  input-error\" : \"inputField\"}\r\n                type={isLogin ? 'text' : 'email'}\r\n                placeholder={\r\n                  isLogin ? \"Enter username or email\" : \"Enter email\"\r\n                }\r\n                // value={username}\r\n                // onChange={(e) => setUsername(e.target.value)}\r\n                onChange={(e) => handleInput(e)}\r\n                name=\"email\"\r\n\r\n\r\n              />\r\n              {inputErrors.email && <p className=\"error\">{inputErrors.email}</p>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className={inputErrors.password ? \"inputField  input-error\":\"inputField\"}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                // onChange={(e) => setPassword(e.target.value)}\r\n                onChange={(e) => handleInput(e)}\r\n                name=\"password\"\r\n\r\n              />\r\n              {inputErrors.password && <p className=\"error\">{inputErrors.password}</p>}\r\n            </div>\r\n            <a\r\n              href=\"/\"\r\n              className=\"recovery-password-btn\"\r\n              onClick={(e) => test(e)}\r\n            >\r\n              Recovery Password\r\n            </a>\r\n            <button className=\"btn login-btn\">\r\n              {isLogin ? \"Sign In\" : \"Sign Up\"}\r\n            </button>\r\n\r\n            <p className=\"register-btn\">\r\n\r\n              {isLogin ? \"Not a member \": \"Already have an account  \"}\r\n              <span\r\n                onClick={() => signInForm()}\r\n              >\r\n                {isLogin ? \"Register now\":\"Login\"}\r\n              </span>\r\n            </p>\r\n            {error && <h5 className=' error login-error'>{errorMsg}</h5>}\r\n\r\n          </form>\r\n          <div className=\"blur\" style={{ top: \"10%\", right: \"10%\" }}></div>\r\n          <div className=\"blur\" style={{ top: \"18%\", left: \"0%\" }}></div>\r\n          <div className=\"blur\" style={{ bottom: \"10%\", right: \"0\" }}></div>\r\n          <div className=\"blur\" style={{ bottom: \"0%\", left: \"0\" }}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["forwardRef","_ref","ref","color","size","_jsx","className","children","register","data","async","dispatch","type","actionTypes","response","axiosInstance","post","error","_error$response","addToast","message","registerUserApi","payload","login","loginData","_error$response2","loginUserApi","console","log","logout","formData","setFormData","useState","firstName","lastName","username","email","password","inputErrors","setInputErrors","isLogin","setIsLogin","useDispatch","loading","errorMsg","useSelector","state","auth","handleInput","e","newObj","target","name","value","_jsxs","Model","Loader","src","WelcomImg","alt","onSubmit","preventDefault","errorVaildation","vaildation","Object","keys","length","isEmail","search","placeholder","onChange","href","onClick","test","style","top","right","left","bottom"],"sourceRoot":""}